from django.db import models
from django.contrib.auth.models import AbstractUser
from django.core.validators import MinLengthValidator
from django.utils.translation import gettext_lazy as _

class UserProfile(AbstractUser):
    ROLE_CHOICES = [
        ('user', 'Regular User'),
        ('admin', 'Administrator'),
    ]
    role = models.CharField(
        max_length=20,
        choices=ROLE_CHOICES,
        default='user',
        verbose_name=_('Role')
    )
    bio = models.TextField(
        blank=True,
        verbose_name=_('Biography'),
        help_text=_('A brief description about yourself')
    )
    theme_preference = models.CharField(
        max_length=20,
        choices=[
            ('light', 'Light'),
            ('dark', 'Dark'),
            ('system', 'System')
        ],
        default='system',
        verbose_name=_('Theme Preference')
    )
    notification_enabled = models.BooleanField(
        default=True,
        verbose_name=_('Notifications Enabled')
    )
    
    class Meta:
        verbose_name = 'User Profile'
        verbose_name_plural = 'User Profiles'

    groups = models.ManyToManyField(
        'auth.Group',
        related_name='user_profiles',
        blank=True,
        help_text='The groups this user belongs to.',
        verbose_name='groups'
    )
    user_permissions = models.ManyToManyField(
        'auth.Permission',
        related_name='user_profiles',
        blank=True,
        help_text='Specific permissions for this user.',
        verbose_name='user permissions'
    )

class ChatHistory(models.Model):
    user = models.ForeignKey(
        UserProfile,
        on_delete=models.CASCADE,
        related_name='chat_histories',
        verbose_name=_('User')
    )
    timestamp = models.DateTimeField(
        auto_now_add=True,
        verbose_name=_('Timestamp')
    )
    user_message = models.TextField(
        validators=[MinLengthValidator(1)],
        verbose_name=_('User Message'),
        help_text=_('The message sent by the user')
    )
    bot_response = models.TextField(
        validators=[MinLengthValidator(1)],
        verbose_name=_('Bot Response'),
        help_text=_('The response generated by the bot')
    )
    is_flagged = models.BooleanField(
        default=False,
        verbose_name=_('Is Flagged'),
        help_text=_('Flag for inappropriate content')
    )

    def __str__(self):
        return f"{self.user.username} - {self.timestamp}"

    class Meta:
        ordering = ['-timestamp']
        verbose_name = 'Chat History'
        verbose_name_plural = 'Chat Histories'
